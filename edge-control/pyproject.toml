[tool.poetry]
name = "edge-control"
version = "0.1.0"
description = "Autonomous robot control"
authors = ["Oystein Haug Olsen <oholsen@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.10"
aiofiles = "^0.8.0"
aiostream = "^0.4.1"
pyyaml = "^6"
numpy = "^1.19.0"
utm = "^0.5.0"
shapely = "^1.7.1"
dacite = "^1.5.1"
aioserial = "^1.3.0"
websockets = "^10.1"
pyquaternion = "^0.9.9"
aiohttp = "^3.7.4"
gmqtt = "^0.6.9"

[tool.poetry.extras]
hagedag = []

[tool.poetry.dev-dependencies]
pytest = "^6.2"
mypy = "^0.931"
black = {version = "^22.6", allow-prereleases = true}
pytest-cov = "^3.0.0"
pytest-asyncio = "^0.17.2"
isort = "^5.6.4"
coverage = "^6.4"
matplotlib = "^3.3.3"

[tool.black]
line-length = 120
target_version = ['py37']
include = '\.py$'

[tool.isort]
line_length=120                # corresponds to -w  flag
multi_line_output=3            # corresponds to -m  flag
include_trailing_comma=true    # corresponds to -tc flag
skip_glob = '^((?!py$).)*$'    # this makes sort all Python files
known_third_party = ["cv2", "dacite", "dataclasses", "matplotlib", "numpy", "pytest", "transformations", "yaml"]

[tool.poetry.scripts]
mqtt = "edge_control.mqtt:main"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
